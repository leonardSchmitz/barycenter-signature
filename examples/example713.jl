# example 7.13

a = [5,4,3,4]

m = sum(a)
N = length(a)
W = QQMatrixBaryNAxis(a)
# [ 1//32    5//32    5//32    5//32   5//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [-3//32    1//32    5//32    5//32   5//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [-3//32   -3//32    1//32    5//32   5//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [-3//32   -3//32   -3//32    1//32   5//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [-3//32   -3//32   -3//32   -3//32   1//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    5//32    5//32   5//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32   -3//32    1//32    5//32   5//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32   -3//32   -3//32    1//32   5//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32   -3//32   -3//32   -3//32   1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32    1//32    5//32   5//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32   -3//32    1//32   5//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32   -3//32   -3//32   1//32    1//32    1//32    1//32   1//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32    1//32    5//32    5//32   5//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32   -3//32    1//32    5//32   5//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32   -3//32   -3//32    1//32   5//32]
# [ 1//32    1//32    1//32    1//32   1//32    1//32    1//32    1//32   1//32    1//32    1//32   1//32   -3//32   -3//32   -3//32   1//32]

P1 = identity_matrix(QQ,m) + sum([(-1)^j*QQMatrixE(m,i,j) for i in (a[1]+1:m) for j in (1:a[1])])
# [ 1   0    0   0    0   0   0   0   0   0   0   0   0   0   0   0]
# [ 0   1    0   0    0   0   0   0   0   0   0   0   0   0   0   0]
# [ 0   0    1   0    0   0   0   0   0   0   0   0   0   0   0   0]
# [ 0   0    0   1    0   0   0   0   0   0   0   0   0   0   0   0]
# [ 0   0    0   0    1   0   0   0   0   0   0   0   0   0   0   0]
# [-1   1   -1   1   -1   1   0   0   0   0   0   0   0   0   0   0]
# [-1   1   -1   1   -1   0   1   0   0   0   0   0   0   0   0   0]
# [-1   1   -1   1   -1   0   0   1   0   0   0   0   0   0   0   0]
# [-1   1   -1   1   -1   0   0   0   1   0   0   0   0   0   0   0]
# [-1   1   -1   1   -1   0   0   0   0   1   0   0   0   0   0   0]
# [-1   1   -1   1   -1   0   0   0   0   0   1   0   0   0   0   0]
# [-1   1   -1   1   -1   0   0   0   0   0   0   1   0   0   0   0]
# [-1   1   -1   1   -1   0   0   0   0   0   0   0   1   0   0   0]
# [-1   1   -1   1   -1   0   0   0   0   0   0   0   0   1   0   0]
# [-1   1   -1   1   -1   0   0   0   0   0   0   0   0   0   1   0]
# [-1   1   -1   1   -1   0   0   0   0   0   0   0   0   0   0   1]

P1*W*transpose(P1)
# [ 1//32    5//32    5//32    5//32   5//32       0       0       0      0       0       0      0       0       0       0      0]
# [-3//32    1//32    5//32    5//32   5//32       0       0       0      0       0       0      0       0       0       0      0]
# [-3//32   -3//32    1//32    5//32   5//32       0       0       0      0       0       0      0       0       0       0      0]
# [-3//32   -3//32   -3//32    1//32   5//32       0       0       0      0       0       0      0       0       0       0      0]
# [-3//32   -3//32   -3//32   -3//32   1//32       0       0       0      0       0       0      0       0       0       0      0]
# [     0        0        0        0       0       0    1//8    1//8   1//8       0       0      0       0       0       0      0]
# [     0        0        0        0       0   -1//8       0    1//8   1//8       0       0      0       0       0       0      0]
# [     0        0        0        0       0   -1//8   -1//8       0   1//8       0       0      0       0       0       0      0]
# [     0        0        0        0       0   -1//8   -1//8   -1//8      0       0       0      0       0       0       0      0]
# [     0        0        0        0       0       0       0       0      0       0    1//8   1//8       0       0       0      0]
# [     0        0        0        0       0       0       0       0      0   -1//8       0   1//8       0       0       0      0]
# [     0        0        0        0       0       0       0       0      0   -1//8   -1//8      0       0       0       0      0]
# [     0        0        0        0       0       0       0       0      0       0       0      0       0    1//8    1//8   1//8]
# [     0        0        0        0       0       0       0       0      0       0       0      0   -1//8       0    1//8   1//8]
# [     0        0        0        0       0       0       0       0      0       0       0      0   -1//8   -1//8       0   1//8]
# [     0        0        0        0       0       0       0       0      0       0       0      0   -1//8   -1//8   -1//8      0]

P2temp = N*identity_matrix(QQ,a[1]) + (N-1)*sum(QQMatrixE(a[1],i,2*j-1)-QQMatrixE(a[1],i,2*j) for j in (1:div(a[1]-1,2)) for i in (2*j:a[1]))
P2 = block_diagonal_matrix([P2temp,identity_matrix(QQ,sum(a[2:N]))])
# [4    0   0    0   0   0   0   0   0   0   0   0   0   0   0   0]
# [3    1   0    0   0   0   0   0   0   0   0   0   0   0   0   0]
# [3   -3   4    0   0   0   0   0   0   0   0   0   0   0   0   0]
# [3   -3   3    1   0   0   0   0   0   0   0   0   0   0   0   0]
# [3   -3   3   -3   4   0   0   0   0   0   0   0   0   0   0   0]
# [0    0   0    0   0   1   0   0   0   0   0   0   0   0   0   0]
# [0    0   0    0   0   0   1   0   0   0   0   0   0   0   0   0]
# [0    0   0    0   0   0   0   1   0   0   0   0   0   0   0   0]
# [0    0   0    0   0   0   0   0   1   0   0   0   0   0   0   0]
# [0    0   0    0   0   0   0   0   0   1   0   0   0   0   0   0]
# [0    0   0    0   0   0   0   0   0   0   1   0   0   0   0   0]
# [0    0   0    0   0   0   0   0   0   0   0   1   0   0   0   0]
# [0    0   0    0   0   0   0   0   0   0   0   0   1   0   0   0]
# [0    0   0    0   0   0   0   0   0   0   0   0   0   1   0   0]
# [0    0   0    0   0   0   0   0   0   0   0   0   0   0   1   0]
# [0    0   0    0   0   0   0   0   0   0   0   0   0   0   0   1]

P2*P1*W*transpose(P2*P1)
# [1//2      1      1      1      1       0       0       0      0       0       0      0       0       0       0      0]
# [   0   1//2      1      1      1       0       0       0      0       0       0      0       0       0       0      0]
# [   0      0   1//2      1      1       0       0       0      0       0       0      0       0       0       0      0]
# [   0      0      0   1//2      1       0       0       0      0       0       0      0       0       0       0      0]
# [   0      0      0      0   1//2       0       0       0      0       0       0      0       0       0       0      0]
# [   0      0      0      0      0       0    1//8    1//8   1//8       0       0      0       0       0       0      0]
# [   0      0      0      0      0   -1//8       0    1//8   1//8       0       0      0       0       0       0      0]
# [   0      0      0      0      0   -1//8   -1//8       0   1//8       0       0      0       0       0       0      0]
# [   0      0      0      0      0   -1//8   -1//8   -1//8      0       0       0      0       0       0       0      0]
# [   0      0      0      0      0       0       0       0      0       0    1//8   1//8       0       0       0      0]
# [   0      0      0      0      0       0       0       0      0   -1//8       0   1//8       0       0       0      0]
# [   0      0      0      0      0       0       0       0      0   -1//8   -1//8      0       0       0       0      0]
# [   0      0      0      0      0       0       0       0      0       0       0      0       0    1//8    1//8   1//8]
# [   0      0      0      0      0       0       0       0      0       0       0      0   -1//8       0    1//8   1//8]
# [   0      0      0      0      0       0       0       0      0       0       0      0   -1//8   -1//8       0   1//8]
# [   0      0      0      0      0       0       0       0      0       0       0      0   -1//8   -1//8   -1//8      0]

P3 = block_diagonal_matrix([QQMatrixAxisNFtrafo(a[1]),block_diagonal_matrix([QQMatrixUdmUdTNFtrafo(a[i]) for i in (2:N)])])
# [ 1   -1   1   -1   1   0    0   0   0   0    0   0   0    0   0   0]
# [-1    1   0   -1   1   0    0   0   0   0    0   0   0    0   0   0]
# [-1    0   1   -1   1   0    0   0   0   0    0   0   0    0   0   0]
# [-1    0   0    1   0   0    0   0   0   0    0   0   0    0   0   0]
# [-1    0   0    0   1   0    0   0   0   0    0   0   0    0   0   0]
# [ 0    0   0    0   0   1    0   0   0   0    0   0   0    0   0   0]
# [ 0    0   0    0   0   0    1   0   0   0    0   0   0    0   0   0]
# [ 0    0   0    0   0   1   -1   1   0   0    0   0   0    0   0   0]
# [ 0    0   0    0   0   1   -1   0   1   0    0   0   0    0   0   0]
# [ 0    0   0    0   0   0    0   0   0   1    0   0   0    0   0   0]
# [ 0    0   0    0   0   0    0   0   0   0    1   0   0    0   0   0]
# [ 0    0   0    0   0   0    0   0   0   1   -1   1   0    0   0   0]
# [ 0    0   0    0   0   0    0   0   0   0    0   0   1    0   0   0]
# [ 0    0   0    0   0   0    0   0   0   0    0   0   0    1   0   0]
# [ 0    0   0    0   0   0    0   0   0   0    0   0   1   -1   1   0]
# [ 0    0   0    0   0   0    0   0   0   0    0   0   1   -1   0   1]

P3*P2*P1*W*transpose(P3*P2*P1)
# [1//2       0      0       0      0       0      0       0      0       0      0   0       0      0       0      0]
# [   0       0   1//2       0      0       0      0       0      0       0      0   0       0      0       0      0]
# [   0   -1//2      0       0      0       0      0       0      0       0      0   0       0      0       0      0]
# [   0       0      0       0   1//2       0      0       0      0       0      0   0       0      0       0      0]
# [   0       0      0   -1//2      0       0      0       0      0       0      0   0       0      0       0      0]
# [   0       0      0       0      0       0   1//8       0      0       0      0   0       0      0       0      0]
# [   0       0      0       0      0   -1//8      0       0      0       0      0   0       0      0       0      0]
# [   0       0      0       0      0       0      0       0   1//8       0      0   0       0      0       0      0]
# [   0       0      0       0      0       0      0   -1//8      0       0      0   0       0      0       0      0]
# [   0       0      0       0      0       0      0       0      0       0   1//8   0       0      0       0      0]
# [   0       0      0       0      0       0      0       0      0   -1//8      0   0       0      0       0      0]
# [   0       0      0       0      0       0      0       0      0       0      0   0       0      0       0      0]
# [   0       0      0       0      0       0      0       0      0       0      0   0       0   1//8       0      0]
# [   0       0      0       0      0       0      0       0      0       0      0   0   -1//8      0       0      0]
# [   0       0      0       0      0       0      0       0      0       0      0   0       0      0       0   1//8]
# [   0       0      0       0      0       0      0       0      0       0      0   0       0      0   -1//8      0]

P4 = diagonal_matrix([1,1,1,1,1,1,N,1,N,1,N,1,1,N,1,N]);
temp= P4*P3*P2*P1*W*transpose(P4*P3*P2*P1);
shif = prod([swap_rows(identity_matrix(QQ,m),i,i+1) for i in ((m-4):(m-1))]);
temp2 = shif^4*temp*transpose(shif^4)
# [1//2       0      0       0      0       0      0       0      0       0      0       0      0       0      0   0]
# [   0       0   1//2       0      0       0      0       0      0       0      0       0      0       0      0   0]
# [   0   -1//2      0       0      0       0      0       0      0       0      0       0      0       0      0   0]
# [   0       0      0       0   1//2       0      0       0      0       0      0       0      0       0      0   0]
# [   0       0      0   -1//2      0       0      0       0      0       0      0       0      0       0      0   0]
# [   0       0      0       0      0       0   1//2       0      0       0      0       0      0       0      0   0]
# [   0       0      0       0      0   -1//2      0       0      0       0      0       0      0       0      0   0]
# [   0       0      0       0      0       0      0       0   1//2       0      0       0      0       0      0   0]
# [   0       0      0       0      0       0      0   -1//2      0       0      0       0      0       0      0   0]
# [   0       0      0       0      0       0      0       0      0       0   1//2       0      0       0      0   0]
# [   0       0      0       0      0       0      0       0      0   -1//2      0       0      0       0      0   0]
# [   0       0      0       0      0       0      0       0      0       0      0       0   1//2       0      0   0]
# [   0       0      0       0      0       0      0       0      0       0      0   -1//2      0       0      0   0]
# [   0       0      0       0      0       0      0       0      0       0      0       0      0       0   1//2   0]
# [   0       0      0       0      0       0      0       0      0       0      0       0      0   -1//2      0   0]
# [   0       0      0       0      0       0      0       0      0       0      0       0      0       0      0   0]

P5 = block_diagonal_matrix([inv(QQMatrixAxisNFtrafo(sum(m)-1)),QQ[1;]])
# [1   1   -1   1   -1   1   -1   1   -1   1   -1   1   -1   1   -1   0]
# [1   2   -1   2   -2   2   -2   2   -2   2   -2   2   -2   2   -2   0]
# [1   1    0   2   -2   2   -2   2   -2   2   -2   2   -2   2   -2   0]
# [1   1   -1   2   -1   2   -2   2   -2   2   -2   2   -2   2   -2   0]
# [1   1   -1   1    0   2   -2   2   -2   2   -2   2   -2   2   -2   0]
# [1   1   -1   1   -1   2   -1   2   -2   2   -2   2   -2   2   -2   0]
# [1   1   -1   1   -1   1    0   2   -2   2   -2   2   -2   2   -2   0]
# [1   1   -1   1   -1   1   -1   2   -1   2   -2   2   -2   2   -2   0]
# [1   1   -1   1   -1   1   -1   1    0   2   -2   2   -2   2   -2   0]
# [1   1   -1   1   -1   1   -1   1   -1   2   -1   2   -2   2   -2   0]
# [1   1   -1   1   -1   1   -1   1   -1   1    0   2   -2   2   -2   0]
# [1   1   -1   1   -1   1   -1   1   -1   1   -1   2   -1   2   -2   0]
# [1   1   -1   1   -1   1   -1   1   -1   1   -1   1    0   2   -2   0]
# [1   1   -1   1   -1   1   -1   1   -1   1   -1   1   -1   2   -1   0]
# [1   1   -1   1   -1   1   -1   1   -1   1   -1   1   -1   1    0   0]
# [0   0    0   0    0   0    0   0    0   0    0   0    0   0    0   1]

P5*temp2*transpose(P5)
# [1//2      1      1      1      1      1      1      1      1      1      1      1      1      1      1   0]
# [   0   1//2      1      1      1      1      1      1      1      1      1      1      1      1      1   0]
# [   0      0   1//2      1      1      1      1      1      1      1      1      1      1      1      1   0]
# [   0      0      0   1//2      1      1      1      1      1      1      1      1      1      1      1   0]
# [   0      0      0      0   1//2      1      1      1      1      1      1      1      1      1      1   0]
# [   0      0      0      0      0   1//2      1      1      1      1      1      1      1      1      1   0]
# [   0      0      0      0      0      0   1//2      1      1      1      1      1      1      1      1   0]
# [   0      0      0      0      0      0      0   1//2      1      1      1      1      1      1      1   0]
# [   0      0      0      0      0      0      0      0   1//2      1      1      1      1      1      1   0]
# [   0      0      0      0      0      0      0      0      0   1//2      1      1      1      1      1   0]
# [   0      0      0      0      0      0      0      0      0      0   1//2      1      1      1      1   0]
# [   0      0      0      0      0      0      0      0      0      0      0   1//2      1      1      1   0]
# [   0      0      0      0      0      0      0      0      0      0      0      0   1//2      1      1   0]
# [   0      0      0      0      0      0      0      0      0      0      0      0      0   1//2      1   0]
# [   0      0      0      0      0      0      0      0      0      0      0      0      0      0   1//2   0]
# [   0      0      0      0      0      0      0      0      0      0      0      0      0      0      0   0]

P5*shif^4*P4*P3*P2*P1*QQ(1,N)*ones_matrix(QQ,m,1)
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [0]

P5*shif^4*P4*P3*P2*P1
# [19   -15   15   -15   15   -2   -1   1   -4   1   -4   0   -2   -1   1   -4]
# [33   -29   30   -30   30   -4   -2   2   -8   2   -8   0   -4   -2   2   -8]
# [33   -33   34   -30   30   -4   -2   2   -8   2   -8   0   -4   -2   2   -8]
# [33   -33   33   -29   30   -4   -2   2   -8   2   -8   0   -4   -2   2   -8]
# [33   -33   33   -33   34   -4   -2   2   -8   2   -8   0   -4   -2   2   -8]
# [30   -26   26   -26   26   -4    2   2   -8   2   -8   0   -4   -2   2   -8]
# [27   -23   23   -23   23   -5    6   2   -8   2   -8   0   -4   -2   2   -8]
# [27   -23   23   -23   23   -1   -2   2   -4   2   -8   0   -4   -2   2   -8]
# [24   -20   20   -20   20    2   -5   1    0   2   -8   0   -4   -2   2   -8]
# [24   -20   20   -20   20   -2   -1   1   -4   2   -4   0   -4   -2   2   -8]
# [21   -17   17   -17   17   -2   -1   1   -4   1    0   0   -4   -2   2   -8]
# [21   -17   17   -17   17   -2   -1   1   -4   1   -4   0   -4    2   2   -8]
# [18   -14   14   -14   14   -2   -1   1   -4   1   -4   0   -5    6   2   -8]
# [18   -14   14   -14   14   -2   -1   1   -4   1   -4   0   -1   -2   2   -4]
# [15   -11   11   -11   11   -2   -1   1   -4   1   -4   0    2   -5   1    0]
# [-1     1   -1     1   -1    0    0   0    0   1   -1   1    0    0   0    0]
