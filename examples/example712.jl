# example 7.12

a = [4,6,2]

m = sum(a)
N = length(a)
W = QQMatrixBaryNAxis(a) 
# [1//18    2//9    2//9    2//9   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18]
# [-1//9   1//18    2//9    2//9   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18]
# [-1//9   -1//9   1//18    2//9   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18]
# [-1//9   -1//9   -1//9   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18]
# [1//18   1//18   1//18   1//18   1//18    2//9    2//9    2//9    2//9    2//9   1//18   1//18]
# [1//18   1//18   1//18   1//18   -1//9   1//18    2//9    2//9    2//9    2//9   1//18   1//18]
# [1//18   1//18   1//18   1//18   -1//9   -1//9   1//18    2//9    2//9    2//9   1//18   1//18]
# [1//18   1//18   1//18   1//18   -1//9   -1//9   -1//9   1//18    2//9    2//9   1//18   1//18]
# [1//18   1//18   1//18   1//18   -1//9   -1//9   -1//9   -1//9   1//18    2//9   1//18   1//18]
# [1//18   1//18   1//18   1//18   -1//9   -1//9   -1//9   -1//9   -1//9   1//18   1//18   1//18]
# [1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18    2//9]
# [1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18   1//18   -1//9   1//18]

P1 = identity_matrix(QQ,m) - (transpose(QQMatrixU(m) - block_diagonal_matrix([QQMatrixU(ai) for ai in a])))*QQMatrixQ(m)
# [ 1   0    0   0    0   0    0   0    0   0   0   0]
# [ 0   1    0   0    0   0    0   0    0   0   0   0]
# [ 0   0    1   0    0   0    0   0    0   0   0   0]
# [ 0   0    0   1    0   0    0   0    0   0   0   0]
# [-1   1   -1   1    1   0    0   0    0   0   0   0]
# [-1   1   -1   1    0   1    0   0    0   0   0   0]
# [-1   1   -1   1    0   0    1   0    0   0   0   0]
# [-1   1   -1   1    0   0    0   1    0   0   0   0]
# [-1   1   -1   1    0   0    0   0    1   0   0   0]
# [-1   1   -1   1    0   0    0   0    0   1   0   0]
# [-1   1   -1   1   -1   1   -1   1   -1   1   1   0]
# [-1   1   -1   1   -1   1   -1   1   -1   1   0   1]

P2 = identity_matrix(QQ,m) + (N-1)*sum([QQMatrixE(m,i,j)*QQMatrixQ(m) for j in (1:m) for i in (Int(2*floor(j/2)+1):m)])
# [3    0   0    0   0    0   0    0   0    0   0   0]
# [2    1   0    0   0    0   0    0   0    0   0   0]
# [2   -2   3    0   0    0   0    0   0    0   0   0]
# [2   -2   2    1   0    0   0    0   0    0   0   0]
# [2   -2   2   -2   3    0   0    0   0    0   0   0]
# [2   -2   2   -2   2    1   0    0   0    0   0   0]
# [2   -2   2   -2   2   -2   3    0   0    0   0   0]
# [2   -2   2   -2   2   -2   2    1   0    0   0   0]
# [2   -2   2   -2   2   -2   2   -2   3    0   0   0]
# [2   -2   2   -2   2   -2   2   -2   2    1   0   0]
# [2   -2   2   -2   2   -2   2   -2   2   -2   3   0]
# [2   -2   2   -2   2   -2   2   -2   2   -2   2   1]

P2*P1*W*transpose(P2*P1)
# [1//2      1      1      1      1      1      1      1      1      1      1      1]
# [   0   1//2      1      1      1      1      1      1      1      1      1      1]
# [   0      0   1//2      1      1      1      1      1      1      1      1      1]
# [   0      0      0   1//2      1      1      1      1      1      1      1      1]
# [   0      0      0      0   1//2      1      1      1      1      1      1      1]
# [   0      0      0      0      0   1//2      1      1      1      1      1      1]
# [   0      0      0      0      0      0   1//2      1      1      1      1      1]
# [   0      0      0      0      0      0      0   1//2      1      1      1      1]
# [   0      0      0      0      0      0      0      0   1//2      1      1      1]
# [   0      0      0      0      0      0      0      0      0   1//2      1      1]
# [   0      0      0      0      0      0      0      0      0      0   1//2      1]
# [   0      0      0      0      0      0      0      0      0      0      0   1//2]

QQ(1,N)*P2*P1*ones_matrix(QQ,m,1)
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]
# [1]



